class_name Gen_AllShaders extends Node
const SHADER_INVINCIBILITY_FRAMES_SHADER : Shader = preload("res://zaft/lib/hitbox/shaders/invincibility-frames-shader.gdshader")
const SHADER_BACKGROUND_CRYPT : Shader = preload("res://zaft/lib/shader/background-crypt.gdshader")
const SHADER_BALATRO : Shader = preload("res://zaft/lib/shader/balatro.gdshader")
const SHADER_BLACK_HOLE_ATMOSPHERE_SUCKS_LIGHT : Shader = preload("res://zaft/lib/shader/black-hole-atmosphere-sucks-light.gdshader")
const SHADER_CLOUDY_SKY : Shader = preload("res://zaft/lib/shader/cloudy-sky.gdshader")
const SHADER_CRT_OVERLAY : Shader = preload("res://zaft/lib/shader/crt-overlay.gdshader")
const SHADER_DOTS_BACKGROUND : Shader = preload("res://zaft/lib/shader/dots-background.gdshader")
const SHADER_ELECTRONIC_BACKGROUND : Shader = preload("res://zaft/lib/shader/electronic-background.gdshader")
const SHADER_FIRE : Shader = preload("res://zaft/lib/shader/fire.gdshader")
const SHADER_FIREY : Shader = preload("res://zaft/lib/shader/firey.gdshader")
const SHADER_FLARE : Shader = preload("res://zaft/lib/shader/flare.gdshader")
const SHADER_GRID_BACKGROUND : Shader = preload("res://zaft/lib/shader/grid-background.gdshader")
const SHADER_HOLE_ALPHA : Shader = preload("res://zaft/lib/shader/hole-alpha.gdshader")
const SHADER_HOLE_MUL : Shader = preload("res://zaft/lib/shader/hole-mul.gdshader")
const SHADER_HOLE_SUB : Shader = preload("res://zaft/lib/shader/hole-sub.gdshader")
const SHADER_HOLE : Shader = preload("res://zaft/lib/shader/hole.gdshader")
const SHADER_HOLO2D : Shader = preload("res://zaft/lib/shader/holo2d.gdshader")
const SHADER_HOLOSPRITE : Shader = preload("res://zaft/lib/shader/holosprite.gdshader")
const SHADER_ICY : Shader = preload("res://zaft/lib/shader/icy.gdshader")
const SHADER_LANDSCAPE_MOCKUP : Shader = preload("res://zaft/lib/shader/landscape-mockup.gdshader")
const SHADER_LAVA : Shader = preload("res://zaft/lib/shader/lava.gdshader")
const SHADER_MELTING_PIXELATEY : Shader = preload("res://zaft/lib/shader/melting-pixelatey.gdshader")
const SHADER_NEBULA : Shader = preload("res://zaft/lib/shader/nebula.gdshader")
const SHADER_OUTLINE : Shader = preload("res://zaft/lib/shader/outline.gdshader")
const SHADER_PLANET : Shader = preload("res://zaft/lib/shader/planet.gdshader")
const SHADER_STAR_ATMOSPHERE_PRODUCES_LIGHT : Shader = preload("res://zaft/lib/shader/star-atmosphere-produces-light.gdshader")
const SHADER_STARFIELD : Shader = preload("res://zaft/lib/shader/starfield.gdshader")
const SHADER_STARFIELDV_WITH_NEBULA_BESPOKE : Shader = preload("res://zaft/lib/shader/starfieldv-with-nebula-bespoke.gdshader")
const SHADER_STARFIELDV_WITH_NEBULA : Shader = preload("res://zaft/lib/shader/starfieldv-with-nebula.gdshader")
const SHADER_STARFIELDV2_BESPOKE : Shader = preload("res://zaft/lib/shader/starfieldv2-bespoke.gdshader")
const SHADER_STARFIELDV2 : Shader = preload("res://zaft/lib/shader/starfieldv2.gdshader")
const SHADER_SUCK_BEAM : Shader = preload("res://zaft/lib/shader/suck-beam.gdshader")
const SHADER_TOOL_WATER : Shader = preload("res://zaft/lib/shader/tool-water.gdshader")
const SHADER_WATERY_PROC_VORONOI : Shader = preload("res://zaft/lib/shader/watery-proc-voronoi.gdshader")
