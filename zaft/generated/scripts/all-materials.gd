class_name Gen_AllMaterials extends Node
const MATERIAL_INVINCIBILITY_FRAMES_SHADER_ : ShaderMaterial = preload("res://zaft/lib/hitbox/resources/invincibility-frames-shader-material.tres")
const MATERIAL_INVINCIBILITY_FRAMES_SHADER : ShaderMaterial = preload("res://zaft/generated/materials/invincibility-frames-shader_material.tres")
const MATERIAL_BACKGROUND_CRYPT : ShaderMaterial = preload("res://zaft/generated/materials/background-crypt_material.tres")
const MATERIAL_BALATRO : ShaderMaterial = preload("res://zaft/generated/materials/balatro_material.tres")
const MATERIAL_BLACK_HOLE_ATMOSPHERE_SUCKS_LIGHT : ShaderMaterial = preload("res://zaft/generated/materials/black-hole-atmosphere-sucks-light_material.tres")
const MATERIAL_CLOUDY_SKY : ShaderMaterial = preload("res://zaft/generated/materials/cloudy-sky_material.tres")
const MATERIAL_CRT_OVERLAY : ShaderMaterial = preload("res://zaft/generated/materials/crt-overlay_material.tres")
const MATERIAL_DOTS_BACKGROUND : ShaderMaterial = preload("res://zaft/generated/materials/dots-background_material.tres")
const MATERIAL_ELECTRONIC_BACKGROUND : ShaderMaterial = preload("res://zaft/generated/materials/electronic-background_material.tres")
const MATERIAL_FIRE : ShaderMaterial = preload("res://zaft/generated/materials/fire_material.tres")
const MATERIAL_FIREY : ShaderMaterial = preload("res://zaft/generated/materials/firey_material.tres")
const MATERIAL_FLARE : ShaderMaterial = preload("res://zaft/generated/materials/flare_material.tres")
const MATERIAL_GRID_BACKGROUND : ShaderMaterial = preload("res://zaft/generated/materials/grid-background_material.tres")
const MATERIAL_HOLE_ALPHA : ShaderMaterial = preload("res://zaft/generated/materials/hole-alpha_material.tres")
const MATERIAL_HOLE_MUL : ShaderMaterial = preload("res://zaft/generated/materials/hole-mul_material.tres")
const MATERIAL_HOLE_SUB : ShaderMaterial = preload("res://zaft/generated/materials/hole-sub_material.tres")
const MATERIAL_HOLE : ShaderMaterial = preload("res://zaft/generated/materials/hole_material.tres")
const MATERIAL_HOLO_2D : ShaderMaterial = preload("res://zaft/generated/materials/holo-2d_material.tres")
const MATERIAL_HOLOSPRITE : ShaderMaterial = preload("res://zaft/generated/materials/holosprite_material.tres")
const MATERIAL_ICY : ShaderMaterial = preload("res://zaft/generated/materials/icy_material.tres")
const MATERIAL_LANDSCAPE_MOCKUP : ShaderMaterial = preload("res://zaft/generated/materials/landscape-mockup_material.tres")
const MATERIAL_LAVA : ShaderMaterial = preload("res://zaft/generated/materials/lava_material.tres")
const MATERIAL_MELTING_PIXELATEY : ShaderMaterial = preload("res://zaft/generated/materials/melting-pixelatey_material.tres")
const MATERIAL_NEBULA : ShaderMaterial = preload("res://zaft/generated/materials/nebula_material.tres")
const MATERIAL_OUTLINE : ShaderMaterial = preload("res://zaft/generated/materials/outline_material.tres")
const MATERIAL_PLANET : ShaderMaterial = preload("res://zaft/generated/materials/planet_material.tres")
const MATERIAL_STAR_ATMOSPHERE_PRODUCES_LIGHT : ShaderMaterial = preload("res://zaft/generated/materials/star-atmosphere-produces-light_material.tres")
const MATERIAL_STARFIELD : ShaderMaterial = preload("res://zaft/generated/materials/starfield_material.tres")
const MATERIAL_STARFIELDV_WITH_NEBULA_BESPOKE : ShaderMaterial = preload("res://zaft/generated/materials/starfieldv-with-nebula-bespoke_material.tres")
const MATERIAL_STARFIELDV_WITH_NEBULA : ShaderMaterial = preload("res://zaft/generated/materials/starfieldv-with-nebula_material.tres")
const MATERIAL_STARFIELDV_2_BESPOKE : ShaderMaterial = preload("res://zaft/generated/materials/starfieldv-2-bespoke_material.tres")
const MATERIAL_STARFIELDV_2 : ShaderMaterial = preload("res://zaft/generated/materials/starfieldv-2_material.tres")
const MATERIAL_SUCK_BEAM : ShaderMaterial = preload("res://zaft/generated/materials/suck-beam_material.tres")
const MATERIAL_TOOL_WATER : ShaderMaterial = preload("res://zaft/generated/materials/tool-water_material.tres")
const MATERIAL_WATERY_PROC_VORONOI : ShaderMaterial = preload("res://zaft/generated/materials/watery-proc-voronoi_material.tres")

var ALL_MATERIALS := [MATERIAL_INVINCIBILITY_FRAMES_SHADER_,MATERIAL_INVINCIBILITY_FRAMES_SHADER,MATERIAL_BACKGROUND_CRYPT,MATERIAL_BALATRO,MATERIAL_BLACK_HOLE_ATMOSPHERE_SUCKS_LIGHT,MATERIAL_CLOUDY_SKY,MATERIAL_CRT_OVERLAY,MATERIAL_DOTS_BACKGROUND,MATERIAL_ELECTRONIC_BACKGROUND,MATERIAL_FIRE,MATERIAL_FIREY,MATERIAL_FLARE,MATERIAL_GRID_BACKGROUND,MATERIAL_HOLE_ALPHA,MATERIAL_HOLE_MUL,MATERIAL_HOLE_SUB,MATERIAL_HOLE,MATERIAL_HOLO_2D,MATERIAL_HOLOSPRITE,MATERIAL_ICY,MATERIAL_LANDSCAPE_MOCKUP,MATERIAL_LAVA,MATERIAL_MELTING_PIXELATEY,MATERIAL_NEBULA,MATERIAL_OUTLINE,MATERIAL_PLANET,MATERIAL_STAR_ATMOSPHERE_PRODUCES_LIGHT,MATERIAL_STARFIELD,MATERIAL_STARFIELDV_WITH_NEBULA_BESPOKE,MATERIAL_STARFIELDV_WITH_NEBULA,MATERIAL_STARFIELDV_2_BESPOKE,MATERIAL_STARFIELDV_2,MATERIAL_SUCK_BEAM,MATERIAL_TOOL_WATER,MATERIAL_WATERY_PROC_VORONOI,]
